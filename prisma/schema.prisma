// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    type                     String
    provider                 String
    providerAccountId        String  @map("provider_account_id")
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    refresh_token_expires_in Int?

    userId String @map("user_id")
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@map("accounts")
}

model Session {
    id String @id @default(cuid())

    expires   DateTime
    createdAt DateTime @default(now()) @map("created_at")

    sessionToken String @unique @map("session_token")

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("sessions")
}

model User {
    id String @id @default(cuid())

    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")
    deletedAt DateTime? @map("deleted_at")

    email         String?   @unique
    firstName     String?   @map("first_name")
    lastName      String?   @map("last_name")
    emailVerified DateTime? @map("email_verified")
    image         String?

    accounts Account[]
    sessions Session[]

    @@index([createdAt])
    @@index([deletedAt])
    @@map("users")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
    @@map("verification_tokens")
}
